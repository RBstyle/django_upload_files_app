version: '3.8'

services:
  web:
    build: .
    command: sh -c "python /upload_app/upload_app/manage.py migrate && python /upload_app/upload_app/manage.py runserver 0.0.0.0:8000"
    container_name: django_upload_app
    volumes:
      - .:/upload_app
    env_file:
      - .env
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://upload_files_admin:password@db:5432/upload_files
      - POSTGRES_DB=upload_files
      - POSTGRES_USER=upload_files_admin
      - POSTGRES_PASSWORD=password
      - POSTGRES_HOST=db
    depends_on:
      - db
      - rabbitmq
  db:
    image: postgres:14.9
    restart: always
    hostname: db
    ports:
      - "15432:5432"
    env_file:
      - .env
    environment:
      - "POSTGRES_HOST_AUTH_METHOD=trust"
      # - "POSTGRES_DB=${DB_NAME}"
      # - "POSTGRES_USER:${DB_USER}"
      # - "POSTGRES_PASSWORD:${DB_PASSWORD}"
    volumes:
      - ./database/init.sql:/docker-entrypoint-initdb.d/1_init_schema.sql

  celery:
    restart: always
    build: .
    working_dir: /upload_app
    volumes:
      - .:/upload_app
    ports:
      - "5555:5555"
    command: sh -c "cd upload_app && celery -A upload_app worker"
    # entrypoint: [ "docker-entrypoint.sh" ]
    links:
      - rabbitmq
    depends_on:
      - rabbitmq

  rabbitmq:
    image: rabbitmq:3.12-management
    hostname: rabbitmq
    restart: always
    ports:
      - "15672:5672"
